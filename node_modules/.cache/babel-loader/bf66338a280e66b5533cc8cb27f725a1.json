{"ast":null,"code":"var _jsxFileName = \"/Users/imsewon/Desktop/FE\\u1100\\u1162\\u1107\\u1161\\u11AF/CS492/src/components/DateAndTimeTable.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport movie1 from \"./movies/듄.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst times = [{\n  time: \"10:00\",\n  seat: 30\n}, {\n  time: \"11:00\",\n  seat: 67\n}, {\n  time: \"12:00\",\n  seat: 44\n}, {\n  time: \"14:00\",\n  seat: 16\n}, {\n  time: \"16:00\",\n  seat: 24\n}, {\n  time: \"18:00\",\n  seat: 98\n}, {\n  time: \"20:00\",\n  seat: 29\n}, {\n  time: \"21:00\",\n  seat: 41\n}];\n\nconst DateAndTimeTable = _ref => {\n  let {\n    times = []\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"w-1/3 h-95screen bg-white font-bold\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"h-1/5\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie1,\n        class: \"w-1/3 h-full object-cover w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"flex h-4/5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"flex-auto h-5/6 overflow-y-scroll\",\n        children: /*#__PURE__*/_jsxDEV(DateTable, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"flex-auto\",\n        children: /*#__PURE__*/_jsxDEV(TimeTable, {\n          times: times\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c = DateAndTimeTable;\n\nconst DateTable = () => {\n  _s();\n\n  // let today = new Date();\n  let today = new Date(2021, 11, 1);\n  console.log(dateToString(today).substring(0, 4));\n  const [currentYear, setCurrentYear] = useState(dateToString(today).substring(0, 4));\n  const [currentMonth, setCurrentMonth] = useState(dateToString(today).substring(4, 6)); // const currentYear = dateToString(today).substring(0, 4);\n  // const currentMonth = dateToString(today).substring(4, 6);\n\n  const [yearChanged, setYearChanged] = useState(false);\n  const dates = [dateToString(today)];\n\n  for (let i = 0; i < 20; i++) {\n    today.setDate(today.getDate() + 1);\n    dates.push(dateToString(today));\n  } // console.log(dates);\n\n\n  function dateToString(date1) {\n    let year = date1.getFullYear(); // 년도\n\n    let month = (\"\" + (date1.getMonth() + 1)).padStart(2, \"0\"); // 월\n\n    let date = (\"\" + date1.getDate()).padStart(2, \"0\"); // 날짜\n\n    let day = date1.getDay(); // 요일\n\n    const days = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n    return \"\" + year + month + date + days[day];\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"font-sans ml-10 mt-10 mx-auto text-gray-500 \",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"font-sans text-center mx-auto text-md \",\n          children: currentYear\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"font-sans text-center mx-auto text-4xl mb-5\",\n          children: currentMonth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), dates.map(date => /*#__PURE__*/_jsxDEV(DateRow, {\n          date: date,\n          currentYear: currentYear,\n          setCurrentYear: setCurrentYear\n        }, date, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DateTable, \"scDbTD96X4rt9wXwvGzj8AR0nKw=\");\n\n_c2 = DateTable;\n\nconst DateRow = _ref2 => {\n  let {\n    date,\n    currentYear,\n    setCurrentYear\n  } = _ref2;\n  let cur_year = date.substring(0, 4);\n  let cur_month = date.substring(4, 6);\n  let cur_date = date.substring(6, 8);\n  let cur_day = date.substring(8, 9); // if (cur_year != currentYear) {\n  //   // console.log(\"year changed\", cur_year);\n  //   // setCurrentYear(\"\");\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        class: \"ml-20 mr-20 text-lg py-3 px-10 rounded-md hover:bg-gray-100 hover:text-blue-500\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"mr-3\",\n          children: cur_date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: cur_day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = DateRow;\n\nconst TimeTable = _ref3 => {\n  let {\n    times = []\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"font-sans mt-10 mx-auto text-gray-500 font-medium\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: times.map(section => /*#__PURE__*/_jsxDEV(TimeRow, {\n          section: section\n        }, section.time, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = TimeTable;\n\nconst TimeRow = _ref4 => {\n  _s2();\n\n  let {\n    section\n  } = _ref4;\n  const [isShown, setIsShown] = useState(false);\n  const {\n    time,\n    seat\n  } = section;\n  const seatWithTotal = seat + \"/343\";\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: /*#__PURE__*/_jsxDEV(\"td\", {\n      class: \"mr-20 py-5 px-10  tracking-wide text-right rounded-md hover:bg-gray-100 hover:text-blue-500 \",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onMouseOver: mouseOverTime,\n        onMouseOut: mouseOutTime,\n        class: \"text-4xl \",\n        children: changeTimeForm(time)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ampm\",\n        class: \"text-3xl ml-3 mr-10\",\n        children: amOrPm(time)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"seat\",\n        class: \"text-sm  pt-4 pr-5 tracking-normal\",\n        children: seatWithTotal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n\n  function mouseOverTime(e) {\n    setIsShown(true);\n  }\n\n  function mouseOutTime(e) {\n    setIsShown(false);\n  }\n};\n\n_s2(TimeRow, \"AfL4AMulNN2iutG1qDR77gnp7oc=\");\n\n_c5 = TimeRow;\n\nfunction changeTimeForm(time) {\n  if (time.slice(0, 2) * 1 > 12) {\n    return time.slice(0, 2) * 1 - 12 + \":00\";\n  } else {\n    return time;\n  }\n}\n\nfunction amOrPm(time) {\n  if (time.slice(0, 2) * 1 >= 12) {\n    return \"PM\";\n  } else {\n    return \"AM\";\n  }\n} // export default () => <TimeTable times={times} />;\n\n\nexport default (() => /*#__PURE__*/_jsxDEV(DateAndTimeTable, {\n  times: times\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 176,\n  columnNumber: 22\n}, this));\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"DateAndTimeTable\");\n$RefreshReg$(_c2, \"DateTable\");\n$RefreshReg$(_c3, \"DateRow\");\n$RefreshReg$(_c4, \"TimeTable\");\n$RefreshReg$(_c5, \"TimeRow\");","map":{"version":3,"sources":["/Users/imsewon/Desktop/FE개발/CS492/src/components/DateAndTimeTable.js"],"names":["React","useState","movie1","times","time","seat","DateAndTimeTable","DateTable","today","Date","console","log","dateToString","substring","currentYear","setCurrentYear","currentMonth","setCurrentMonth","yearChanged","setYearChanged","dates","i","setDate","getDate","push","date1","year","getFullYear","month","getMonth","padStart","date","day","getDay","days","map","DateRow","cur_year","cur_month","cur_date","cur_day","TimeTable","section","TimeRow","isShown","setIsShown","seatWithTotal","mouseOverTime","mouseOutTime","changeTimeForm","amOrPm","e","slice"],"mappings":"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","sourcesContent":["\nimport React, { useState } from \"react\";\nimport movie1 from \"./movies/듄.jpg\";\n\nconst times = [\n  { time: \"10:00\", seat: 30 },\n  { time: \"11:00\", seat: 67 },\n  { time: \"12:00\", seat: 44 },\n  { time: \"14:00\", seat: 16 },\n  { time: \"16:00\", seat: 24 },\n  { time: \"18:00\", seat: 98 },\n  { time: \"20:00\", seat: 29 },\n  { time: \"21:00\", seat: 41 },\n];\n\nconst DateAndTimeTable = ({ times = [] }) => {\n  return (\n    <div class=\"w-1/3 h-95screen bg-white font-bold\">\n      <div class=\"h-1/5\">\n        <img src={movie1} class=\"w-1/3 h-full object-cover w-full\"></img>\n      </div>\n      <div class=\"flex h-4/5\">\n        <div class=\"flex-auto h-5/6 overflow-y-scroll\">\n          <DateTable />\n        </div>\n        <div class=\"flex-auto\">\n          <TimeTable times={times} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst DateTable = () => {\n  // let today = new Date();\n  let today = new Date(2021, 11, 1);\n  console.log(dateToString(today).substring(0, 4));\n\n  const [currentYear, setCurrentYear] = useState(\n    dateToString(today).substring(0, 4)\n  );\n  const [currentMonth, setCurrentMonth] = useState(\n    dateToString(today).substring(4, 6)\n  );\n  // const currentYear = dateToString(today).substring(0, 4);\n  // const currentMonth = dateToString(today).substring(4, 6);\n  const [yearChanged, setYearChanged] = useState(false);\n\n  const dates = [dateToString(today)];\n  for (let i = 0; i < 20; i++) {\n    today.setDate(today.getDate() + 1);\n    dates.push(dateToString(today));\n  }\n  // console.log(dates);\n  function dateToString(date1) {\n    let year = date1.getFullYear(); // 년도\n    let month = (\"\" + (date1.getMonth() + 1)).padStart(2, \"0\"); // 월\n    let date = (\"\" + date1.getDate()).padStart(2, \"0\"); // 날짜\n    let day = date1.getDay(); // 요일\n    const days = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n    return \"\" + year + month + date + days[day];\n  }\n\n  return (\n    <div class=\"font-sans ml-10 mt-10 mx-auto text-gray-500 \">\n      <table>\n        <tbody>\n          <div class=\"font-sans text-center mx-auto text-md \">\n            {currentYear}\n          </div>\n          <div class=\"font-sans text-center mx-auto text-4xl mb-5\">\n            {currentMonth}\n          </div>\n          {dates.map((date) => (\n            <DateRow\n              key={date}\n              date={date}\n              currentYear={currentYear}\n              setCurrentYear={setCurrentYear}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nconst DateRow = ({ date, currentYear, setCurrentYear }) => {\n  let cur_year = date.substring(0, 4);\n  let cur_month = date.substring(4, 6);\n  let cur_date = date.substring(6, 8);\n  let cur_day = date.substring(8, 9);\n\n  // if (cur_year != currentYear) {\n  //   // console.log(\"year changed\", cur_year);\n  //   // setCurrentYear(\"\");\n  // }\n  return (\n    <div>\n      {/* <tr>\n        <td class=\"ml-20 mr-20 text-xl px-10\">{yearChanged && cur_year}</td>\n      </tr> */}\n      <tr>\n        <td class=\"ml-20 mr-20 text-lg py-3 px-10 rounded-md hover:bg-gray-100 hover:text-blue-500\">\n          <span class=\"mr-3\">{cur_date}</span>\n          <span>{cur_day}</span>\n        </td>\n      </tr>\n    </div>\n  );\n};\n\nconst TimeTable = ({ times = [] }) => {\n  return (\n    <div class=\"font-sans mt-10 mx-auto text-gray-500 font-medium\">\n      <table>\n        <tbody>\n          {times.map((section) => (\n            <TimeRow key={section.time} section={section} />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nconst TimeRow = ({ section }) => {\n  const [isShown, setIsShown] = useState(false);\n  const { time, seat } = section;\n  const seatWithTotal = seat + \"/343\";\n  return (\n    <tr>\n      <td class=\"mr-20 py-5 px-10  tracking-wide text-right rounded-md hover:bg-gray-100 hover:text-blue-500 \">\n        <span\n          onMouseOver={mouseOverTime}\n          onMouseOut={mouseOutTime}\n          class=\"text-4xl \"\n        >\n          {changeTimeForm(time)}\n        </span>\n        <span className=\"ampm\" class=\"text-3xl ml-3 mr-10\">\n          {amOrPm(time)}\n        </span>\n        <span className=\"seat\" class=\"text-sm  pt-4 pr-5 tracking-normal\">\n          {seatWithTotal}\n        </span>\n      </td>\n    </tr>\n  );\n  function mouseOverTime(e) {\n    setIsShown(true);\n  }\n\n  function mouseOutTime(e) {\n    setIsShown(false);\n  }\n};\n\nfunction changeTimeForm(time) {\n  if (time.slice(0, 2) * 1 > 12) {\n    return time.slice(0, 2) * 1 - 12 + \":00\";\n  } else {\n    return time;\n  }\n}\n\nfunction amOrPm(time) {\n  if (time.slice(0, 2) * 1 >= 12) {\n    return \"PM\";\n  } else {\n    return \"AM\";\n  }\n}\n\n// export default () => <TimeTable times={times} />;\nexport default () => <DateAndTimeTable times={times} />;\n\n"]},"metadata":{},"sourceType":"module"}