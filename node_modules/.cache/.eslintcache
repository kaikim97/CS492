[{"/Users/jaehan/CS492/src/index.js":"1","/Users/jaehan/CS492/src/reportWebVitals.js":"2","/Users/jaehan/CS492/src/App.js":"3","/Users/jaehan/CS492/src/context.js":"4","/Users/jaehan/CS492/src/findReservation.js":"5","/Users/jaehan/CS492/src/PersonalInfo.js":"6","/Users/jaehan/CS492/src/features/TopBar.js":"7","/Users/jaehan/CS492/src/features/movieTable/MovieTable.js":"8","/Users/jaehan/CS492/src/features/dateAndTimeTable/DateAndTimeTable.js":"9","/Users/jaehan/CS492/src/api.js":"10","/Users/jaehan/CS492/src/features/movieTable/MovieRating.js":"11","/Users/jaehan/CS492/src/features/dateAndTimeTable/components/DateTable.js":"12","/Users/jaehan/CS492/src/features/dateAndTimeTable/components/TimeTable.js":"13","/Users/jaehan/CS492/src/components/seat/seat.js":"14","/Users/jaehan/CS492/src/apolloSetup.js":"15","/Users/jaehan/CS492/src/testSubscription.js":"16","/Users/jaehan/CS492/src/library/CustomButton.js":"17","/Users/jaehan/CS492/src/library/Ticket.js":"18"},{"size":658,"mtime":1638891043369,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1637733745833,"results":"21","hashOfConfig":"20"},{"size":1123,"mtime":1638890746030,"results":"22","hashOfConfig":"20"},{"size":2118,"mtime":1638857360455,"results":"23","hashOfConfig":"20"},{"size":6502,"mtime":1638891043368,"results":"24","hashOfConfig":"20"},{"size":8395,"mtime":1638891129253,"results":"25","hashOfConfig":"20"},{"size":305,"mtime":1638891043367,"results":"26","hashOfConfig":"20"},{"size":4274,"mtime":1638891043368,"results":"27","hashOfConfig":"20"},{"size":2024,"mtime":1638891043367,"results":"28","hashOfConfig":"20"},{"size":1392,"mtime":1638857360452,"results":"29","hashOfConfig":"20"},{"size":1340,"mtime":1638891043368,"results":"30","hashOfConfig":"20"},{"size":2375,"mtime":1638891043367,"results":"31","hashOfConfig":"20"},{"size":2866,"mtime":1638891043368,"results":"32","hashOfConfig":"20"},{"size":10839,"mtime":1638891067231,"results":"33","hashOfConfig":"20"},{"size":748,"mtime":1638891043367,"results":"34","hashOfConfig":"20"},{"size":1,"mtime":1638891043369,"results":"35","hashOfConfig":"20"},{"size":499,"mtime":1638891043369,"results":"36","hashOfConfig":"20"},{"size":1499,"mtime":1638891043369,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qr1ckm",{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},"/Users/jaehan/CS492/src/index.js",[],"/Users/jaehan/CS492/src/reportWebVitals.js",[],"/Users/jaehan/CS492/src/App.js",["87","88","89","90","91"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { AuthContext, AuthProvider } from \"./context\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport TopBar from \"./features/TopBar\";\nimport MovieTable from \"./features/movieTable/MovieTable\";\nimport DateAndTimeTable from \"./features/dateAndTimeTable/DateAndTimeTable\";\nimport PersonalInfo from \"./PersonalInfo\";\nimport FindReservation from \"./findReservation\";\n\nfunction App() {\n  // const navigate = useNavigate();\n  // const findReservation = () => {\n  //   navigate(\"/findReservation\");\n  // };\n\n  return (\n    <AuthProvider>\n      <div className=\"App\">\n        {/* <TopBar /> */}\n        {/* <TopBar function={findReservation} /> */}\n        <BrowserRouter>\n          <Routes>\n            <Route path=\"/\" exact element={<MovieTable />} />\n            <Route path=\"/movieInfo\" element={<DateAndTimeTable />} />\n            <Route path=\"/findReservation\" element={<FindReservation />} />\n          </Routes>\n        </BrowserRouter>\n      </div>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","/Users/jaehan/CS492/src/context.js",["92"],"import React, { useReducer, createContext } from \"react\";\n\nconst initialState = {\n  title: \"\",\n  date: \"\",\n  time: \"\",\n  seats: [],\n  id: \"\",\n  price: 0,\n};\n\nconst AuthContext = createContext({\n  title: \"\",\n  date: \"\",\n  time: \"\",\n  id: \"\",\n  price: 0,\n  setTitle: (title) => {},\n  setDate: (date) => {},\n  setTime: (time) => {},\n  setSeats: (seat) => {},\n  setId: (id) => {},\n  setPrice: (price) => {},\n});\n\nfunction authReducer(state, action) {\n  switch (action.type) {\n    case \"SETTITLE\":\n      return {\n        ...state,\n        title: action.payload,\n      };\n    case \"SETDATE\":\n      return {\n        ...state,\n        date: action.payload,\n      };\n    case \"SETTIME\":\n      return {\n        ...state,\n        time: action.payload,\n      };\n    case \"SETSEATS\":\n      return {\n        ...state,\n        seats: action.payload,\n      };\n    case \"SETID\":\n      return {\n        ...state,\n        id: action.payload,\n      };\n    case \"SETPRICE\":\n      return {\n        ...state,\n        price: action.payload,\n      };\n  }\n}\n\nfunction AuthProvider(props) {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  function setTitle(title) {\n    dispatch({\n      type: \"SETTITLE\",\n      payload: title,\n    });\n  }\n  function setDate(date) {\n    dispatch({\n      type: \"SETDATE\",\n      payload: date,\n    });\n  }\n\n  function setTime(time) {\n    dispatch({\n      type: \"SETTIME\",\n      payload: time,\n    });\n  }\n\n  function setSeats(seat) {\n    dispatch({\n      type: \"SETSEATS\",\n      payload: seat,\n    });\n  }\n\n  function setId(id) {\n    dispatch({\n      type: \"SETID\",\n      payload: id,\n    });\n  }\n\n  function setPrice(price) {\n    dispatch({\n      type: \"SETPRICE\",\n      payload: price,\n    });\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        title: state.title,\n        date: state.date,\n        time: state.time,\n        seats: state.seats,\n        id: state.id,\n        price: state.price,\n        setTitle,\n        setDate,\n        setTime,\n        setSeats,\n        setId,\n        setPrice,\n      }}\n      {...props}\n    />\n  );\n}\n\nexport { AuthContext, AuthProvider };\n","/Users/jaehan/CS492/src/findReservation.js",["93","94","95","96","97","98","99","100","101","102"],"import { useState } from \"react\";\nimport api from \"./api\";\nimport { Link } from \"react-router-dom\";\nimport TextField from \"@mui/material/TextField\";\nimport { Button, Modal } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport CustomButton from \"./library/CustomButton\";\n// import \"./FindReservation.css\";\nimport Ticket from \"./library/Ticket\";\n\nexport default function FindReservation() {\n  const navigate = useNavigate();\n  const [resNum, setResNum] = useState(\"\");\n  const [birth, setBirth] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [pwd, setPwd] = useState(\"\");\n  const [data, setData] = useState(null);\n  const [open, setOpen] = useState(false);\n\n  // const temp = api.getAllReservations().then((response) => {\n  //   console.log(response.data);\n  // });\n\n  const handleChange = (event) => {\n    switch (event.target.id) {\n      case \"birth\":\n        setBirth(event.target.value);\n        break;\n      case \"phone\":\n        setPhone(event.target.value);\n        break;\n      case \"pwd\":\n        setPwd(event.target.value);\n        break;\n      case \"resNum\":\n        setResNum(event.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const resNumClick = () => {\n    const data = api.getReservationById(resNum).then((response) => {\n      setOpen(true);\n      if (response.data != \"\") {\n        setData(response.data);\n      }\n    });\n  };\n\n  const resQuery = () => {\n    const queryString = new URLSearchParams({\n      birth: birth,\n      phone: phone,\n      password: pwd,\n    });\n    const data = api.getReservationQuery(queryString).then((response) => {\n      setOpen(true);\n      if (response.data != \"\") {\n        setData(response.data);\n      }\n    });\n  };\n\n  const clear = () => {\n    setOpen(false);\n    setData(null);\n  };\n\n  function goHome() {\n    navigate(\"/\");\n  }\n  function goBack() {\n    setOpen(false);\n    setResNum(\"\");\n    setBirth(\"\");\n    setPhone(\"\");\n    setPwd(\"\");\n  }\n  return (\n    <div class=\"text-gray-600\">\n      <div class=\"mt-8vh text-bigletter font-bold text-center\">예약 조회</div>\n      <div class=\"mx-28vw text-left mt-12vh mb-8vh\">\n        <p class=\"text-letter mb-2vh font-semibold\">예약 번호로 조회하기</p>\n        <div class=\"flex justify-between\">\n          <TextField\n            id=\"resNum\"\n            onChange={handleChange}\n            value={resNum}\n            style={{ width: \"80%\" }}\n            fullWidth\n            placeholder=\"예약번호\"\n          />\n          <Button onClick={resNumClick} class=\"bg-gray-200 w-19p\">\n            조회\n          </Button>\n        </div>\n      </div>\n\n      <div class=\"mx-28vw text-left \">\n        <p class=\"text-letter mb-2vh font-semibold\">\n          이름과 휴대폰번호로 조회하기\n        </p>\n        <div class=\"w-80p flex justify-between mb-1vh\">\n          <TextField\n            id=\"birth\"\n            onChange={handleChange}\n            value={birth}\n            style={{ width: \"37%\" }}\n            placeholder=\"생년월일(6자리)\"\n          />\n          <TextField\n            id=\"phone\"\n            onChange={handleChange}\n            value={phone}\n            style={{ width: \"60%\" }}\n            placeholder=\"휴대폰 번호\"\n          />\n        </div>\n        <div class=\"flex justify-between\">\n          <TextField\n            id=\"pwd\"\n            onChange={handleChange}\n            value={pwd}\n            style={{ width: \"80%\" }}\n            placeholder=\"비밀번호(4자리)\"\n          />\n          <Button onClick={resQuery} class=\"bg-gray-200 w-19p\">\n            조회\n          </Button>\n        </div>\n      </div>\n      {data == null ? (\n        <Modal open={open}>\n          <div class=\"overflow-y-scroll bg-white rounded-2xl text-gray-500 m-auto mt-20vh mb-15vh w-7/12 sm:w-6/12 h-65vh\">\n            <div class=\"h-28p px-6vw pt-12vh font-semibold text-letter\">\n              <p>예약 내역이 없습니다.</p>\n            </div>\n\n            <div class=\"h-20p mt-10p w-full text-center m-auto place-items-center\">\n              <CustomButton\n                name=\"다시 조회하기\"\n                disabled={false}\n                onClick={goBack}\n                width=\"w-85p\"\n              />\n            </div>\n          </div>\n        </Modal>\n      ) : (\n        <Modal open={open}>\n          <div class=\"overflow-y-scroll bg-white rounded-2xl text-gray-500 m-auto mt-20vh mb-15vh w-7/12 sm:w-6/12 h-65vh\">\n            <div class=\"h-28p px-6vw pt-12vh font-semibold text-letter\">\n              {phone == \"\" && (\n                <p>\n                  예약번호 &nbsp;&nbsp;{data._id}&nbsp;&nbsp; 의 예약\n                  내역입니다.\n                </p>\n              )}\n              {phone != \"\" && (\n                <p>\n                  휴대폰 번호 &nbsp;&nbsp;{phone.substring(0, 3)}-\n                  {phone.substring(3, 7)}-{phone.substring(7, 11)}&nbsp;&nbsp;\n                  의 예약 내역입니다.\n                </p>\n              )}\n            </div>\n            <div class=\"h-42p px-4vw  \">\n              {resNum != \"\" && (\n                <div class=\"h-full\">\n                  <hr class=\"w-full  m-auto mb-3vh\" />\n                  <Ticket\n                    title={data.title}\n                    date={data.date}\n                    time={data.time}\n                    seats={data.seats}\n                    price={data.price}\n                  />\n                  <hr class=\"w-full  m-auto \" />\n                </div>\n              )}\n              <div class=\"h-full overflow-y-scroll\">\n                {phone != \"\" &&\n                  data.map((ticket) => (\n                    <div>\n                      <hr class=\"w-full  m-auto mb-3vh\" />\n                      <Ticket\n                        title={ticket.title}\n                        date={ticket.date}\n                        time={ticket.time}\n                        seats={ticket.seats}\n                        price={ticket.price}\n                      />\n                      <hr class=\"w-full  m-auto \" />\n                    </div>\n                  ))}\n              </div>\n            </div>\n            <div class=\"h-20p mt-10p w-full text-center m-auto place-items-center\">\n              <CustomButton\n                name=\"예약으로 돌아가기\"\n                disabled={false}\n                onClick={goHome}\n                width=\"w-85p\"\n              />\n            </div>\n          </div>\n        </Modal>\n      )}\n    </div>\n  );\n}\n","/Users/jaehan/CS492/src/PersonalInfo.js",["103","104","105","106","107","108","109","110","111","112","113"],"// import \"./PersonalInfo.css\";\nimport { useEffect, useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport Modal from \"@mui/material/Modal\";\nimport Paper from \"@mui/material/Paper\";\nimport api from \"./api\";\nimport { AuthContext } from \"./context.js\";\nimport CustomButton from \"./library/CustomButton\";\nimport { useNavigate } from \"react-router-dom\";\nimport Ticket from \"./library/Ticket\";\n\nexport default function PersonalInfo(props) {\n  const navigate = useNavigate();\n\n  const context = useContext(AuthContext);\n\n  const [birthday, setBirthday] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [pwd, setPwd] = useState(\"\");\n  const [pwdConfirm, setPwdConfirm] = useState(\"\");\n  const [done, setDone] = useState(false);\n  const [buttonDisabled, setButtonDisabled] = useState(true);\n  const [id, setId] = useState(\"\");\n\n  const { open, setClose } = props;\n\n  useEffect(() => {\n    if (\n      phone.length >= 10 &&\n      pwd.length == 4 &&\n      pwdConfirm.length == 4 &&\n      pwd == pwdConfirm\n    ) {\n      setButtonDisabled(false);\n    } else {\n      setButtonDisabled(true);\n    }\n  }, [phone, pwd, pwdConfirm]);\n\n  const handleChange = (event) => {\n    switch (event.target.id) {\n      case \"birthday\":\n        setBirthday(event.target.value);\n        break;\n      case \"phone\":\n        setPhone(event.target.value);\n        break;\n      case \"pwd\":\n        setPwd(event.target.value);\n        break;\n      case \"pwdConfirm\":\n        setPwdConfirm(event.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleConfirm = () => {\n    if (pwd === pwdConfirm) {\n      const updateReservation = api\n        .updateReservationById(context.id, {\n          birth: birthday,\n          phone: phone,\n          password: pwd,\n          price: context.price,\n        })\n        .then((response) => {\n          if (response) {\n            // console.log(response.data);\n            console.log(\"예약이 완료되었습니다.\");\n            setDone(true);\n          }\n        })\n        .catch((error) => {\n          alert(\"예약 시간 초과\");\n          window.location.href = \"/movieInfo\";\n        });\n    } else {\n      console.log(\"비밀번호가 일치하지 않습니다.\");\n    }\n  };\n\n  function goHome() {\n    navigate(\"/\");\n  }\n  return done ? (\n    <div>\n      <Modal open={open}>\n        <div class=\"overflow-y-scroll outline-none bg-white rounded-2xl text-gray-500 m-auto mt-8vh mb-12vh w-10/12 sm:w-6/12 h-80vh\">\n          <div class=\"h-40p px-4vw pt-8vh \">\n            <Ticket\n              title={context.title}\n              date={context.date}\n              time={context.time.substring(0, 2) + context.time.substring(3, 5)}\n              seats={context.seats}\n              price={context.price}\n            />\n            <hr class=\"w-full  m-auto \" />\n          </div>\n\n          <div class=\"h-45p relative px-4vw py-2vh \">\n            <div class=\"text-seat font-medium flex flex-col h-35p justify-between my-2vh px-2vw \">\n              <p>예약이 완료되었습니다.</p>\n              <p>예약번호 &nbsp;&nbsp;&nbsp;&nbsp; {context.id}</p>\n            </div>\n          </div>\n          <div class=\"w-full h-15p\">\n            <div class=\"text-smallletter text-center w-85p m-auto  font-semibold text-gray-400 mb-1p\">\n              예약 조회는 ‘예약 번호로 조회' 또는 ‘생년월일과 휴대폰 번호로\n              조회' 모두 가능합니다\n            </div>\n            <div class=\"w-full text-center m-auto\">\n              <CustomButton\n                name=\"돌아가기\"\n                disabled={buttonDisabled}\n                onClick={goHome}\n                width=\"w-85p \"\n              />\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  ) : (\n    <div>\n      <Modal open={open}>\n        <div class=\"overflow-y-scroll outline-none bg-white rounded-2xl text-gray-500 m-auto mt-8vh mb-12vh w-7/12 sm:w-6/12 h-80vh\">\n          <div class=\"h-40p px-4vw pt-8vh relative\">\n            <button\n              class=\"w-30 py-3 text-4xl rounded-lg bg-white text-gray-500 absolute top-0 right-0 h-16 w-16\"\n              type=\"submit\"\n              onClick={setClose}\n            >\n              X\n            </button>\n            <Ticket\n              title={context.title}\n              date={context.date}\n              time={context.time.substring(0, 2) + context.time.substring(3, 5)}\n              seats={context.seats}\n              price={context.price}\n            />\n            <hr class=\"w-full  m-auto \" />\n          </div>\n\n          <div class=\"h-45p relative px-4vw py-4vh \">\n            <div class=\"text-label font-semibold flex flex-col h-80p  justify-between my-2vh px-2vw \">\n              <div class=\"flex w-full items-center justify-between \">\n                <p class=\"\">생년월일(6자리)</p>\n                <TextField\n                  id=\"birthday\"\n                  placeholder=\"980918\"\n                  value={birthday}\n                  onChange={handleChange}\n                  inputProps={{ maxLength: 11, style: { marginLeft: \"1vw\" } }}\n                  InputProps={{\n                    style: { fontSize: \"min(1.4vw, 2.3vh)\" },\n                  }}\n                  variant=\"standard\"\n                  style={{ width: \"60%\" }}\n                />\n              </div>\n              <div class=\"flex w-full items-center justify-between \">\n                <p class=\"\">휴대폰 번호</p>\n                <TextField\n                  id=\"phone\"\n                  placeholder=\"01000000000\"\n                  value={phone}\n                  onChange={handleChange}\n                  inputProps={{ maxLength: 11, style: { marginLeft: \"1vw\" } }}\n                  InputProps={{\n                    style: { fontSize: \"min(1.4vw, 2.3vh)\" },\n                  }}\n                  variant=\"standard\"\n                  style={{ width: \"60%\" }}\n                />\n              </div>\n              <div class=\"flex w-full items-center justify-between \">\n                <p class=\"\">비밀번호(4자리)</p>\n                <TextField\n                  id=\"pwd\"\n                  placeholder=\"0000\"\n                  type=\"password\"\n                  value={pwd}\n                  onChange={handleChange}\n                  inputProps={{ maxLength: 11, style: { marginLeft: \"1vw\" } }}\n                  InputProps={{\n                    style: { fontSize: \"min(1.4vw, 2.3vh)\" },\n                  }}\n                  variant=\"standard\"\n                  style={{ width: \"60%\" }}\n                />\n              </div>\n              <div class=\"flex w-full items-center justify-between \">\n                <p class=\"\">비밀번호 확인</p>\n                <TextField\n                  id=\"pwdConfirm\"\n                  placeholder=\"0000\"\n                  type=\"password\"\n                  value={pwdConfirm}\n                  onChange={handleChange}\n                  inputProps={{ maxLength: 11, style: { marginLeft: \"1vw\" } }}\n                  InputProps={{\n                    style: { fontSize: \"min(1.4vw, 2.3vh)\" },\n                  }}\n                  variant=\"standard\"\n                  style={{ width: \"60%\" }}\n                />\n              </div>\n            </div>\n          </div>\n\n          <p\n            class={`text-smallletter font-medium  text-center ${\n              pwd.length == 4 && pwdConfirm.length == 4 && pwd !== pwdConfirm\n                ? \"text-red-600\"\n                : \"text-white\"\n            }`}\n          >\n            {\" \"}\n            비밀번호가 일치하지 않습니다. 비밀번호를 확인해주세요\n          </p>\n\n          <div class=\"w-full h-15p text-center m-auto \">\n            <div class=\"text-smallletter w-85p m-auto  font-semibold text-gray-400 mb-1p\">\n              예약 내역이 맞으시면 생년월일과 휴대폰 번호, 비밀번호를 입력 한 후\n              결제를 완료해주세요\n            </div>\n            <div class=\"w-full m-auto\">\n              <CustomButton\n                name=\"결제하기\"\n                disabled={buttonDisabled}\n                onClick={handleConfirm}\n                width=\"w-85p \"\n              />\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","/Users/jaehan/CS492/src/features/TopBar.js",["114"],"import React, { useState } from \"react\";\n\nfunction TopBar(props) {\n  return (\n    <div class=\"w-screen h-14 fixed bg-white text-gray-500 text-right block\">\n      <button class=\"px-10 py-4 font-bold\" onClick={props.function}>\n        예약 조회\n      </button>\n    </div>\n  );\n}\n\nexport default TopBar;\n","/Users/jaehan/CS492/src/features/movieTable/MovieTable.js",["115","116"],"import React, { useState } from \"react\";\nimport MovieRating from \"./MovieRating\";\nimport CustomButton from \"../../library/CustomButton\";\n\nimport movie1 from \"../../components/movies/듄.jpg\";\nimport movie2 from \"../../components/movies/이터널스.jpg\";\nimport movie3 from \"../../components/movies/베놈2.jpg\";\nimport movie4 from \"../../components/movies/강릉.jpg\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport api from \"../../api.js\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../context.js\";\nimport TopBar from \"../TopBar\";\n\nconst movies = [\n  { id: 0, name: \"듄\", poster: movie1 },\n  { id: 1, name: \"이터널스\", poster: movie2 },\n  { id: 2, name: \"베놈2\", poster: movie3 },\n  { id: 3, name: \"강릉\", poster: movie4 },\n];\n\nexport default function MovieTable() {\n  const context = useContext(AuthContext);\n  const [selected, setSelected] = useState(null);\n  const navigate = useNavigate();\n\n  const findReservation = () => {\n    navigate(\"/findReservation\");\n  };\n\n  return (\n    <div class=\"flex flex-col h-screen\">\n      <div>\n        <TopBar function={findReservation} />\n      </div>\n      <div class=\"flex-1 justify-items-center\">\n        <div class=\"overflow-x-scroll flex text-gray-500 mt-20vh\">\n          {movies.map((movie) => (\n            <Movie\n              key={movie.id}\n              movie={movie}\n              selected={selected}\n              setSelected={setSelected}\n            />\n          ))}\n        </div>\n      </div>\n      <div class=\"flex-initial h-14 text-right m-5\">\n        <CustomButton\n          name=\"다음\"\n          disabled={selected == null}\n          onClick={goNext}\n          width=\"w-40 md:w-52 xl:w-2/12\"\n        />\n        {/* )} */}\n      </div>\n    </div>\n  );\n  function goNext() {\n    context.setTitle(movies[selected].name);\n    window.localStorage.setItem(\"title\", movies[selected].name);\n    context.setDate(\"\");\n    context.setTime(\"\");\n    navigate(\"/movieInfo\");\n  }\n}\n\nconst Movie = ({ movie, selected, setSelected }) => {\n  const { id, name, poster } = movie;\n  const [userRating, setUserRating] = useState(null);\n  const [director, setDirector] = useState(null);\n  const [actor, setActor] = useState(null);\n  return (\n    <div\n      class={`w-72 flex-grow-0 flex-shrink-0 xl:flex-grow xl:flex-shrink  ml-1p mr-1p pt-12 pb-6 px-2p border-2 \n      ${selected === id ? \"border-black \" : \"border-white\"} rounded-lg bg-white \n       focus:border-black `}\n      onClick={mouseClick}\n    >\n      <div class=\"group relative rounded-lg bg-gradient-to-t hover:bg-gray-300  hover:from-black hover:to-transparent \">\n        <div class=\"rounded-lg mix-blend-multiply z-10\">\n          <img\n            className=\"poster\"\n            src={poster}\n            class=\"object-contain w-full rounded-lg \"\n            onMouseOver={movieHover}\n            onMouseLeave={movieLeave}\n          ></img>\n        </div>\n        <div class=\" pointer-events-none opacity-0 group-hover:opacity-100 text-white text-xs font-semibold absolute bottom-0 p-5\">\n          <p class=\"text-lg text-yellow-300 font-bold\">\n            {userRating !== null && `${userRating}`}\n          </p>\n          {userRating && <MovieRating userRating={userRating} />}\n          <p>{director != null && `${director} 감독`}</p>\n          <p>{actor != null && `${actor}`}</p>\n        </div>\n      </div>\n\n      <div class=\"text-center font-bold mt-4 text-lg \">{name}</div>\n    </div>\n  );\n\n  function mouseClick(e) {\n    setSelected(id);\n  }\n  function movieHover(e) {\n    const data = api.searchMovie(`query=${name}`).then((response) => {\n      const director_before_parse = response.data.items[0].director;\n      const actor_before_parse = response.data.items[0].actor;\n      const actor_after_parse = actor_before_parse\n        .substring(0, actor_before_parse.length - 1)\n        .split(\"|\")\n        .join(\" | \");\n      const director_after_parse = director_before_parse\n        .substring(0, director_before_parse.length - 1)\n        .split(\"|\")\n        .join(\" | \");\n      setUserRating(response.data.items[0].userRating);\n      setDirector(director_after_parse);\n      setActor(actor_after_parse);\n    });\n  }\n  function movieLeave(e) {\n    setUserRating(null);\n    setDirector(null);\n    setActor(null);\n  }\n};\n","/Users/jaehan/CS492/src/features/dateAndTimeTable/DateAndTimeTable.js",["117","118","119","120","121","122","123"],"import { useNavigate } from \"react-router\";\nimport React, { useState, useEffect } from \"react\";\n\nimport DateTable from \"./components/DateTable\";\nimport TimeTable from \"./components/TimeTable\";\nimport Seat from \"../../components/seat/seat\";\nimport TopBar from \"../TopBar\";\nimport TestSubscription from \"../../testSubscription\";\n\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../context\";\n\nconst DateAndTimeTable = () => {\n  const context = useContext(AuthContext);\n  const title = window.localStorage.getItem(\"title\");\n  const navigate = useNavigate();\n\n  const findReservation = () => {\n    navigate(\"/findReservation\");\n  };\n\n  useEffect(() => {\n    context.setTitle(title);\n  }, []);\n\n  return (\n    <div class=\"flex flex-col \">\n      <div>\n        <TopBar function={findReservation} />\n      </div>\n      <div class=\"flex-initial xl:flex h-content\">\n        <div class=\"w-screen xl:w-1/3 h-1/4 xl:h-full flex  xl:block bg-white font-bold mt-14 \">\n          <div class=\"w-80  xl:w-full h-full xl:h-1/4 relative bg-gradient-to-t bg-gray-300 from-black to-transparent \">\n            <div class=\"h-full mix-blend-multiply \">\n              <img\n                src={require(`../../components/movies/${title}.jpg`).default}\n                class=\" h-full object-cover w-full\"\n              ></img>\n            </div>\n            <div class=\"text-white text-xl xl:text-3xl font-bold absolute bottom-10 left-20\">\n              <p>{title}</p>\n            </div>\n          </div>\n          <div class=\"flex flex-auto h-full xl:h-3/4\">\n            <div class=\" w-1/3 h-9/10 overflow-y-scroll\">\n              <DateTable />\n            </div>\n            <div class=\"w-2/3 h-full overflow-y-scroll\">\n              <TimeTable />\n            </div>\n          </div>\n        </div>\n        <div class=\"w-full xl:w-2/3 h-3/4 xl:h-full xl:mt-14  xl:flex-auto\">\n          {context.date != \"\" && context.time != \"\" && <Seat />}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default () => <DateAndTimeTable />;\n","/Users/jaehan/CS492/src/api.js",[],"/Users/jaehan/CS492/src/features/movieTable/MovieRating.js",["124","125"],"import React from \"react\";\n\nexport default function MovieRating({ userRating }) {\n  let stars = [];\n\n  for (let i = 0; i < parseInt(userRating / 2) + 1; i++) {\n    if (i == parseInt(userRating / 2)) {\n      stars.push(userRating / 2 - parseInt(userRating / 2));\n    } else {\n      stars.push(1);\n    }\n  }\n\n  return (\n    <div class=\" flex mb-8\">\n      {stars.map((star) => (\n        <Star rate={star} />\n      ))}\n    </div>\n  );\n}\n\nconst Star = ({ rate }) => {\n  let ratio = 0;\n  if (rate == 1) {\n    ratio = 0;\n  } else {\n    ratio = 80 - rate * 60;\n  }\n  return (\n    <div style={{ clipPath: `inset(0 ${ratio}% 0 0)` }}>\n      <svg\n        class=\"w-5 w-5 mr-0.5 flex-initial fill-current text-yellow-400 stroke-current stroke-1\"\n        viewBox=\"0 0 24 24\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"1\"\n          d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\"\n        ></path>\n      </svg>\n    </div>\n  );\n};\n","/Users/jaehan/CS492/src/features/dateAndTimeTable/components/DateTable.js",["126"],"import React, { useState } from \"react\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../../context\";\n\nconst DateTable = () => {\n  const [selectedDate, setSelectedDate] = useState(null);\n  const context = useContext(AuthContext);\n\n  const today = new Date(2021, 11, 1);\n\n  const currentYear = dateToString(today).substring(0, 4);\n  const currentMonth = dateToString(today).substring(4, 6);\n\n  const dates = [dateToString(today)];\n  for (let i = 0; i < 20; i++) {\n    today.setDate(today.getDate() + 1);\n    dates.push(dateToString(today));\n  }\n\n  function dateToString(date1) {\n    const year = date1.getFullYear(); // 년도\n    const month = (\"\" + (date1.getMonth() + 1)).padStart(2, \"0\"); // 월\n    const date = (\"\" + date1.getDate()).padStart(2, \"0\"); // 날짜\n    const day = date1.getDay(); // 요일\n    const days = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n    return \"\" + year + month + date + days[day];\n  }\n\n  return (\n    <div class=\"font-sans ml-1/10 mt-10 mx-auto text-gray-500 \">\n      <table>\n        <tbody>\n          <div class=\"font-sans text-center mx-auto text-md \">\n            {currentYear}\n          </div>\n          <div class=\"font-sans text-center mx-auto text-4xl mb-5 \">\n            {currentMonth}\n          </div>\n          {dates.map((date) => (\n            <DateRow\n              key={date}\n              date={date}\n              selectedDate={selectedDate}\n              setSelectedDate={setSelectedDate}\n              context={context}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nconst DateRow = ({ date, selectedDate, setSelectedDate, context }) => {\n  let cur_date = date.substring(6, 8);\n  let cur_day = date.substring(8, 9);\n\n  return (\n    <div>\n      <tr>\n        <div\n          class={` text-lg py-3 px-10 rounded-md ${\n            selectedDate === null ? \"hover:bg-gray-100 hover:text-blue-500\" : \"\"\n          } ${\n            selectedDate === date\n              ? \"text-blue-500 bg-gray-100 \"\n              : \"text-gray-500\"\n          }`}\n          onClick={dateClick}\n        >\n          <td class=\"w-10\">{cur_date}</td>\n          <td>{cur_day}</td>\n        </div>\n      </tr>\n    </div>\n  );\n  function dateClick(e) {\n    setSelectedDate(date);\n    context.setDate(date.substring(0, 8));\n    context.setTime(\"\");\n  }\n};\n\nexport default () => <DateTable />;\n","/Users/jaehan/CS492/src/features/dateAndTimeTable/components/TimeTable.js",["127","128","129","130","131","132"],"import React, { useState, useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../../context\";\nimport api from \"../../../api.js\";\n\nexport default function TimeTable({}) {\n  const context = useContext(AuthContext);\n  const date = context.date;\n  const title = window.localStorage.getItem(\"title\");\n\n  const temp = [\n    { time: \"08:00\", seat: \"\" },\n    { time: \"10:00\", seat: \"\" },\n    { time: \"12:00\", seat: \"\" },\n    { time: \"14:00\", seat: \"\" },\n    { time: \"16:00\", seat: \"\" },\n    { time: \"18:00\", seat: \"\" },\n    { time: \"20:00\", seat: \"\" },\n    { time: \"22:00\", seat: \"\" },\n  ];\n  const times = [\n    \"08:00\",\n    \"10:00\",\n    \"12:00\",\n    \"14:00\",\n    \"16:00\",\n    \"18:00\",\n    \"20:00\",\n    \"22:00\",\n  ];\n\n  const [timeSeats, setTimeSeats] = useState(temp);\n\n  useEffect(() => {\n    if (date != \"\") {\n      const data = api\n        .getAvailable(`title=${title}&date=${date}`)\n        .then((response) => {\n          let s = [];\n          for (let i = 0; i < response.data.length; i++) {\n            const elem = { time: times[i], seat: response.data[i].available };\n            s.push(elem);\n          }\n          if (s !== []) {\n            setTimeSeats(s);\n          }\n        });\n    }\n  }, [date]);\n  return (\n    <div class={`font-sans mt-10 mx-auto  font-medium`}>\n      <table>\n        <tbody>\n          {timeSeats.map((section) => (\n            <TimeRow key={section.time} section={section} context={context} />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nconst TimeRow = ({ section, context }) => {\n  const ifDateSelected = context.date != \"\";\n  const { time, seat } = section;\n  const seatWithTotal = seat + \"/551\";\n  return (\n    <tr>\n      <td\n        class={`mr-20 py-5 px-10 tracking-wide text-right rounded-md ${\n          context.time === \"\" ? \"hover:bg-gray-100 hover:text-blue-500\" : \"\"\n        } ${context.time === time ? \"text-blue-500 bg-gray-100 \" : \"\"} ${\n          ifDateSelected\n            ? \"text-gray-500 \"\n            : \"text-gray-200 pointer-events-none\"\n        }`}\n        onClick={timeClick}\n      >\n        <span class=\"text-2xl md:text-4xl \">{changeTimeForm(time)}</span>\n        <span className=\"ampm\" class=\"text-xl md:text-3xl ml-3 mr-10\">\n          {amOrPm(time)}\n        </span>\n        <span\n          className=\"seat\"\n          class={`text-sm  pt-4 pr-5 tracking-normal ${\n            ifDateSelected && seat != \"\" ? \"\" : \"text-transparent \"\n          }`}\n        >\n          {seatWithTotal}\n        </span>\n      </td>\n    </tr>\n  );\n  function timeClick(e) {\n    context.setTime(time);\n  }\n};\n\nfunction changeTimeForm(time) {\n  if (time.slice(0, 2) * 1 > 12) {\n    return time.slice(0, 2) * 1 - 12 + \":00\";\n  } else {\n    return time;\n  }\n}\n\nfunction amOrPm(time) {\n  if (time.slice(0, 2) * 1 >= 12) {\n    return \"PM\";\n  } else {\n    return \"AM\";\n  }\n}\n","/Users/jaehan/CS492/src/components/seat/seat.js",["133","134","135","136","137","138","139","140","141","142","143","144","145","146"],"import React, { useRef, useEffect, useContext, useState } from \"react\";\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\nimport { AuthContext } from \"../../context.js\";\nimport seatData from \"./seats-kaist.json\";\nimport { useNavigate } from \"react-router-dom\";\nimport apis from \"../../api\";\nimport CustomButton from \"../../library/CustomButton.js\";\nimport { useSubscription } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\";\nimport PersonalInfo from \"../../PersonalInfo.js\";\n\nfunction Seat() {\n  const createSubscription = gql`\n    subscription subscription {\n      reservationUpdated {\n        type\n        info {\n          _id\n          title\n          date\n          time\n          seats\n        }\n      }\n    }\n  `;\n\n  const { data, loading, error } = useSubscription(createSubscription);\n\n  if (data) {\n    console.log(data);\n  }\n  if (error) {\n    console.log(error.message);\n  }\n\n  const ctx = useContext(AuthContext);\n  const navigate = useNavigate();\n  const canvasRef = useRef(null);\n  const seatMap = seatData.map;\n  const seatInfo = seatData.seats;\n  const cornerRadius = 8;\n\n  const [selectedSeat, setSeat] = useState([]);\n  const [reservedSeat, modSeat] = useState([]);\n  const [upload, setLoad] = useState(false);\n  const [totalPrice, setPrice] = useState(0);\n  const [open, setOpen] = useState(false);\n\n  const resSeatRef = useRef(reservedSeat);\n\n  const makeTimeNum = (time) => {\n    return time.split(\":\").join(\"\");\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n    apis.deleteReservation(ctx.id).then((response) => {\n      if (response) console.log(\"선택한 좌석이 취소되었습니다\");\n    });\n  };\n\n  const handleEvent = () => {\n    if (open) {\n      closeModal();\n    }\n  };\n\n  const goNext = () => {\n    ctx.setSeats(selectedSeat.sort());\n    ctx.setPrice(totalPrice);\n\n    const createReservation = apis\n      .preoccupySeat({\n        title: ctx.title,\n        date: ctx.date,\n        time: makeTimeNum(ctx.time),\n        seats: selectedSeat,\n      })\n      .then((response) => {\n        console.log(response.data);\n        if (response.data) {\n          ctx.setId(response.data._id);\n          setOpen(true);\n        } else {\n          console.log(\"이미 선택된 좌석입니다\");\n        }\n      });\n  };\n\n  const numToCode = (x, y) => {\n    var rownum = (y - 11) / 30 + 65;\n    var row = String.fromCharCode(rownum);\n    var col = (x - 17) / 30 + 1;\n    return row + String(col);\n  };\n\n  const codeToNum = (seat) => {\n    const x = (seat.slice(1) - 1) * 30 + 17;\n    const y = (seat.slice(0, 1).charCodeAt(0) - 65) * 30 + 11;\n    return [x, y];\n  };\n\n  // Draw seats\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    const params = `title=${ctx.title}&date=${ctx.date}&time=${makeTimeNum(\n      ctx.time\n    )}`;\n    // Initialize\n    canvas.style.width = \"100%\";\n    canvas.style.height = \"100%\";\n    canvas.width = canvas.offsetWidth;\n    canvas.height = canvas.offsetHeight;\n\n    setSeat((selectedSeat) => []);\n    setPrice(0);\n    setLoad(false);\n\n    apis.getHallsByInfo(params).then((response) => {\n      const occupied = response.data.occupied;\n      const resSeat = Object.entries(occupied);\n      resSeatRef.current = resSeat.map((entrie, idx) => entrie[0]);\n      modSeat((reservedSeat) => resSeat);\n      setLoad(true);\n    });\n\n    if (seatInfo != \"undefined\" && seatInfo != null) {\n      seatInfo.forEach((seatgroup) => {\n        seatgroup.rectangles.forEach((seat) => {\n          // Add Seat availablity & id info\n          seat.available = true;\n          context.strokeStyle = seatgroup.color;\n          context.fillStyle = seatgroup.color;\n\n          const cornerRadius = 8;\n          context.lineJoin = \"round\";\n          context.lineWidth = cornerRadius;\n          context.strokeRect(\n            seat.lefttop.x + cornerRadius / 2,\n            seat.lefttop.y + cornerRadius / 2,\n            seat.size.width - cornerRadius,\n            seat.size.height - cornerRadius\n          );\n          context.fillRect(\n            seat.lefttop.x + cornerRadius / 2,\n            seat.lefttop.y + cornerRadius / 2,\n            seat.size.width - cornerRadius,\n            seat.size.height - cornerRadius\n          );\n        });\n      });\n    }\n\n    for (var i = 0; i < 19; i++) {\n      context.font = \"bold 12pt Calibri\";\n      context.fillStyle = \"black\";\n      context.fillText(String.fromCharCode(i + 65), 0, 29 + 30 * i);\n    }\n    for (var i = 1; i < 30; i++) {\n      context.font = \"bold 12pt Calibri\";\n      context.fillStyle = \"black\";\n      context.fillText(String(i), 30 * i - 12, 12);\n    }\n  }, [ctx.time]);\n\n  // Draw occupied & reserved seats\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n\n    if (upload) {\n      reservedSeat.forEach((seat) => {\n        context.lineJoin = \"round\";\n        context.lineWidth = cornerRadius;\n        if (seat[1] == true) {\n          context.fillStyle = \"#808080\";\n          context.strokeStyle = \"#808080\";\n        } else {\n          context.fillStyle = \"#c0c0c0\";\n          context.strokeStyle = \"#c0c0c0\";\n        }\n\n        const [x, y] = codeToNum(seat[0]);\n\n        context.strokeRect(\n          x + cornerRadius / 2,\n          y + cornerRadius / 2,\n          20 - cornerRadius,\n          20 - cornerRadius\n        );\n        context.fillRect(\n          x + cornerRadius / 2,\n          y + cornerRadius / 2,\n          20 - cornerRadius,\n          20 - cornerRadius\n        );\n      });\n    }\n  }, [upload]);\n\n  // Manage click event\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n\n    canvas.addEventListener(\n      \"click\",\n      function (e) {\n        const resSeat = resSeatRef.current;\n        // Get x, y coordinates\n        var x = e.offsetX;\n        var y = e.offsetY;\n        seatInfo.forEach((seatgroup) => {\n          seatgroup.rectangles.forEach((seat) => {\n            // Detect a selected seat\n            if (\n              seat.lefttop.x < x &&\n              seat.lefttop.x + seat.size.width > x &&\n              seat.lefttop.y < y &&\n              seat.lefttop.y + seat.size.height > y\n            ) {\n              e.preventDefault();\n              // Make a seatNumber\n              // Format : \"Alphabet + Number\" ex) \"A10\"\n              // Alphabet : A ~ S\n              // Number   : 1 ~ 29\n              const seatNum = numToCode(seat.lefttop.x, seat.lefttop.y);\n              if (!resSeat.includes(seatNum)) {\n                if (seat.available) {\n                  context.fillStyle = \"#3C68D8\";\n                  context.strokeStyle = \"#3C68D8\";\n                  seat.available = false;\n                  setSeat((selectedSeat) => selectedSeat.concat(seatNum));\n                  setPrice((totalPrice) => totalPrice + seatgroup.price);\n                } else {\n                  context.fillStyle = seatgroup.color;\n                  context.strokeStyle = seatgroup.color;\n                  seat.available = true;\n                  setSeat((selectedSeat) =>\n                    selectedSeat.filter((s) => s !== seatNum)\n                  );\n                  setPrice((totalPrice) => totalPrice - seatgroup.price);\n                }\n                context.lineJoin = \"round\";\n                context.lineWidth = cornerRadius;\n\n                context.strokeRect(\n                  seat.lefttop.x + cornerRadius / 2,\n                  seat.lefttop.y + cornerRadius / 2,\n                  seat.size.width - cornerRadius,\n                  seat.size.height - cornerRadius\n                );\n                context.fillRect(\n                  seat.lefttop.x + cornerRadius / 2,\n                  seat.lefttop.y + cornerRadius / 2,\n                  seat.size.width - cornerRadius,\n                  seat.size.height - cornerRadius\n                );\n              }\n            }\n          });\n        });\n      },\n      false\n    );\n  }, []);\n\n  // Delete preoccupied seats when press BACK button\n  useEffect(() => {\n    window.addEventListener(\"popstate\", handleEvent);\n    return () => window.removeEventListener(\"popstate\", handleEvent);\n  });\n\n  return (\n    <div class=\" flex flex-col h-full overflow-scroll\">\n      <div class=\" flex items-center flex-auto flex-shrink-0 my-2p\">\n        <div class=\"text-sm font-medium ml-2vh   text-gray-500 flex-initial flex xl:block\">\n          {seatInfo.map((seatgroup) => (\n            <div class=\"flex mb-1\">\n              <div\n                class={`  w-5 h-5  rounded-sm flex-initial mr-5 ${\n                  seatgroup.name == \"R\" ? \"bg-R\" : \"\"\n                } ${seatgroup.name == \"S\" ? \"bg-S\" : \"\"} ${\n                  seatgroup.name == \"A\" ? \"bg-A\" : \"\"\n                }`}\n              ></div>\n              <div class=\"flex-initial mr-6\">{seatgroup.name}석</div>\n              <div class=\"flex-initial mr-8\">\n                {parseInt(seatgroup.price / 1000) + \",000\"}원\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n      <div class=\"w-full flex-auto my-2p items-center ml-10  overflow-scroll \">\n        {/* h-70p my-2p xl:my-4p */}\n        <TransformWrapper\n          doubleClick={{ disabled: true }}\n          maxScale={3}\n          minScale={0.9}\n        >\n          <TransformComponent>\n            <div class=\"\">\n              <canvas\n                id=\"seats\"\n                ref={canvasRef}\n                width={window.innerWidth}\n                height={window.innerHeight}\n                // width={seatMap.size.width}\n                // height={seatMap.size.height}\n                color={seatMap.background}\n                // class=\"object-cover\"\n              ></canvas>\n            </div>\n          </TransformComponent>\n        </TransformWrapper>\n      </div>\n      <div class=\" w-full flex-auto py-2p flex-shrink-0 flex-grow-0 flex  \">\n        <div class=\"w-97/100  mx-auto  py-1p h-full flex  bg-white font-bold rounded-lg items-center\">\n          <div class=\"text-md md:text-xl text-left text-gray-500 w-4/12  overflow-x-scroll flex ml-10 mr-10 flex-initial\">\n            {selectedSeat.sort().map((seat) => (\n              <div>\n                <div class=\"mr-2 align-middle\">{seat}</div>\n              </div>\n            ))}\n          </div>\n          <div\n            class={`text-md md:text-xl flex-auto flex  ${\n              totalPrice == 0 ? \" text-white\" : \"text-gray-500 \"\n            }`}\n          >\n            {parseInt(totalPrice / 1000) + \",000\"}원\n          </div>\n\n          <CustomButton\n            name=\"예약하기\"\n            disabled={selectedSeat.length == 0}\n            onClick={goNext}\n            width=\"w-40 \"\n          />\n          <PersonalInfo open={open} setClose={closeModal} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Seat;\n","/Users/jaehan/CS492/src/apolloSetup.js",[],"/Users/jaehan/CS492/src/testSubscription.js",[],"/Users/jaehan/CS492/src/library/CustomButton.js",["147"],"import React, { useState } from \"react\";\n\nexport default function CustomButton(props) {\n  const { name, disabled, onClick, width } = props;\n  return (\n    <div class=\"\">\n      <button\n        class={`${width} h-full mr-5 py-3 text-center text-button rounded-lg  font-bold ${\n          disabled ? \"bg-gray-100 text-gray-200\" : \"bg-gray-200 text-gray-500\"\n        }`}\n        type=\"submit\"\n        onClick={onClick}\n        disabled={disabled}\n      >\n        {name}\n      </button>\n    </div>\n  );\n}\n","/Users/jaehan/CS492/src/library/Ticket.js",["148","149","150","151","152","153","154"],"import React, { useState } from \"react\";\n\nexport default function Ticket(props) {\n  const { title, date, time, seats, price } = props;\n  const parseDate = (date) => {\n    const temp =\n      date.slice(0, 4) + \",\" + date.slice(4, 6) + \",\" + date.slice(6);\n\n    const dateString = new Date(temp);\n    const dayInt = dateString.getDay();\n\n    const dayString =\n      dayInt == 0\n        ? \"일\"\n        : dayInt == 1\n        ? \"월\"\n        : dayInt == 2\n        ? \"화\"\n        : dayInt == 3\n        ? \"수\"\n        : dayInt == 4\n        ? \"목\"\n        : dayInt == 5\n        ? \"금\"\n        : \"토\";\n\n    const result =\n      date.slice(0, 4) +\n      \".\" +\n      date.slice(4, 6) +\n      \".\" +\n      date.slice(6) +\n      \"(\" +\n      dayString +\n      \")\";\n\n    return result;\n  };\n\n  const parseTime = (time) => {\n    const amPm = time > 1200 ? \"PM\" : \"AM\";\n    const temp = time.slice(0, 2) + \":\" + time.slice(2) + amPm;\n    return temp;\n  };\n\n  return (\n    <div class=\"px-2vw flex flex-col justify-between h-5/6 mb-3vh\">\n      <div class=\"text-title font-bold \">{title}</div>\n\n      <div class=\"text-datetime font-semibold  flex w-10/12 xl:w-1/2 justify-between\">\n        <p> {parseDate(date)}</p>\n        <p> {parseTime(time)}</p>\n      </div>\n      <div class=\" flex w-full justify-between\">\n        <p class=\"text-seat font-semibold \">{seats.join(\", \")}</p>\n        <p class=\"text-price font-medium \">\n          {parseInt(price / 1000) + \",000\"}원\n        </p>\n      </div>\n    </div>\n  );\n}\n",{"ruleId":"155","severity":1,"message":"156","line":1,"column":8,"nodeType":"157","messageId":"158","endLine":1,"endColumn":12},{"ruleId":"155","severity":1,"message":"159","line":3,"column":10,"nodeType":"157","messageId":"158","endLine":3,"endColumn":21},{"ruleId":"155","severity":1,"message":"160","line":5,"column":10,"nodeType":"157","messageId":"158","endLine":5,"endColumn":21},{"ruleId":"155","severity":1,"message":"161","line":7,"column":8,"nodeType":"157","messageId":"158","endLine":7,"endColumn":14},{"ruleId":"155","severity":1,"message":"162","line":10,"column":8,"nodeType":"157","messageId":"158","endLine":10,"endColumn":20},{"ruleId":"163","severity":1,"message":"164","line":27,"column":3,"nodeType":"165","messageId":"166","endLine":58,"endColumn":4},{"ruleId":"155","severity":1,"message":"167","line":3,"column":10,"nodeType":"157","messageId":"158","endLine":3,"endColumn":14},{"ruleId":"155","severity":1,"message":"168","line":44,"column":11,"nodeType":"157","messageId":"158","endLine":44,"endColumn":15},{"ruleId":"169","severity":1,"message":"170","line":46,"column":25,"nodeType":"171","messageId":"172","endLine":46,"endColumn":27},{"ruleId":"155","severity":1,"message":"168","line":58,"column":11,"nodeType":"157","messageId":"158","endLine":58,"endColumn":15},{"ruleId":"169","severity":1,"message":"170","line":60,"column":25,"nodeType":"171","messageId":"172","endLine":60,"endColumn":27},{"ruleId":"155","severity":1,"message":"173","line":66,"column":9,"nodeType":"157","messageId":"158","endLine":66,"endColumn":14},{"ruleId":"169","severity":1,"message":"174","line":155,"column":22,"nodeType":"171","messageId":"172","endLine":155,"endColumn":24},{"ruleId":"169","severity":1,"message":"170","line":161,"column":22,"nodeType":"171","messageId":"172","endLine":161,"endColumn":24},{"ruleId":"169","severity":1,"message":"170","line":170,"column":23,"nodeType":"171","messageId":"172","endLine":170,"endColumn":25},{"ruleId":"169","severity":1,"message":"170","line":184,"column":24,"nodeType":"171","messageId":"172","endLine":184,"endColumn":26},{"ruleId":"155","severity":1,"message":"167","line":3,"column":10,"nodeType":"157","messageId":"158","endLine":3,"endColumn":14},{"ruleId":"155","severity":1,"message":"175","line":5,"column":8,"nodeType":"157","messageId":"158","endLine":5,"endColumn":14},{"ruleId":"155","severity":1,"message":"176","line":7,"column":8,"nodeType":"157","messageId":"158","endLine":7,"endColumn":13},{"ruleId":"155","severity":1,"message":"177","line":25,"column":10,"nodeType":"157","messageId":"158","endLine":25,"endColumn":12},{"ruleId":"155","severity":1,"message":"178","line":25,"column":14,"nodeType":"157","messageId":"158","endLine":25,"endColumn":19},{"ruleId":"169","severity":1,"message":"174","line":32,"column":18,"nodeType":"171","messageId":"172","endLine":32,"endColumn":20},{"ruleId":"169","severity":1,"message":"174","line":33,"column":25,"nodeType":"171","messageId":"172","endLine":33,"endColumn":27},{"ruleId":"169","severity":1,"message":"174","line":34,"column":11,"nodeType":"171","messageId":"172","endLine":34,"endColumn":13},{"ruleId":"155","severity":1,"message":"179","line":63,"column":13,"nodeType":"157","messageId":"158","endLine":63,"endColumn":30},{"ruleId":"169","severity":1,"message":"174","line":218,"column":26,"nodeType":"171","messageId":"172","endLine":218,"endColumn":28},{"ruleId":"169","severity":1,"message":"174","line":218,"column":52,"nodeType":"171","messageId":"172","endLine":218,"endColumn":54},{"ruleId":"155","severity":1,"message":"180","line":1,"column":17,"nodeType":"157","messageId":"158","endLine":1,"endColumn":25},{"ruleId":"181","severity":1,"message":"182","line":83,"column":11,"nodeType":"183","endLine":89,"endColumn":12},{"ruleId":"155","severity":1,"message":"168","line":109,"column":11,"nodeType":"157","messageId":"158","endLine":109,"endColumn":15},{"ruleId":"155","severity":1,"message":"180","line":2,"column":17,"nodeType":"157","messageId":"158","endLine":2,"endColumn":25},{"ruleId":"155","severity":1,"message":"184","line":8,"column":8,"nodeType":"157","messageId":"158","endLine":8,"endColumn":24},{"ruleId":"185","severity":1,"message":"186","line":24,"column":6,"nodeType":"187","endLine":24,"endColumn":8,"suggestions":"188"},{"ruleId":"181","severity":1,"message":"182","line":35,"column":15,"nodeType":"183","endLine":38,"endColumn":16},{"ruleId":"169","severity":1,"message":"170","line":54,"column":25,"nodeType":"171","messageId":"172","endLine":54,"endColumn":27},{"ruleId":"169","severity":1,"message":"170","line":54,"column":47,"nodeType":"171","messageId":"172","endLine":54,"endColumn":49},{"ruleId":"189","severity":1,"message":"190","line":61,"column":1,"nodeType":"191","endLine":61,"endColumn":43},{"ruleId":"169","severity":1,"message":"174","line":7,"column":11,"nodeType":"171","messageId":"172","endLine":7,"endColumn":13},{"ruleId":"169","severity":1,"message":"174","line":25,"column":12,"nodeType":"171","messageId":"172","endLine":25,"endColumn":14},{"ruleId":"189","severity":1,"message":"190","line":84,"column":1,"nodeType":"191","endLine":84,"endColumn":36},{"ruleId":"192","severity":1,"message":"193","line":6,"column":35,"nodeType":"194","messageId":"172","endLine":6,"endColumn":37},{"ruleId":"169","severity":1,"message":"170","line":35,"column":14,"nodeType":"171","messageId":"172","endLine":35,"endColumn":16},{"ruleId":"155","severity":1,"message":"168","line":36,"column":13,"nodeType":"157","messageId":"158","endLine":36,"endColumn":17},{"ruleId":"185","severity":1,"message":"195","line":49,"column":6,"nodeType":"187","endLine":49,"endColumn":12,"suggestions":"196"},{"ruleId":"169","severity":1,"message":"170","line":64,"column":39,"nodeType":"171","messageId":"172","endLine":64,"endColumn":41},{"ruleId":"169","severity":1,"message":"170","line":86,"column":36,"nodeType":"171","messageId":"172","endLine":86,"endColumn":38},{"ruleId":"155","severity":1,"message":"197","line":28,"column":17,"nodeType":"157","messageId":"158","endLine":28,"endColumn":24},{"ruleId":"155","severity":1,"message":"198","line":38,"column":9,"nodeType":"157","messageId":"158","endLine":38,"endColumn":17},{"ruleId":"155","severity":1,"message":"199","line":73,"column":11,"nodeType":"157","messageId":"158","endLine":73,"endColumn":28},{"ruleId":"169","severity":1,"message":"170","line":129,"column":18,"nodeType":"171","messageId":"172","endLine":129,"endColumn":20},{"ruleId":"200","severity":1,"message":"201","line":161,"column":14,"nodeType":"157","messageId":"202","endLine":161,"endColumn":15},{"ruleId":"185","severity":1,"message":"203","line":166,"column":6,"nodeType":"187","endLine":166,"endColumn":16,"suggestions":"204"},{"ruleId":"169","severity":1,"message":"174","line":177,"column":21,"nodeType":"171","messageId":"172","endLine":177,"endColumn":23},{"ruleId":"185","severity":1,"message":"205","line":201,"column":6,"nodeType":"187","endLine":201,"endColumn":14,"suggestions":"206"},{"ruleId":"185","severity":1,"message":"207","line":268,"column":6,"nodeType":"187","endLine":268,"endColumn":8,"suggestions":"208"},{"ruleId":"169","severity":1,"message":"174","line":284,"column":34,"nodeType":"171","messageId":"172","endLine":284,"endColumn":36},{"ruleId":"169","severity":1,"message":"174","line":285,"column":36,"nodeType":"171","messageId":"172","endLine":285,"endColumn":38},{"ruleId":"169","severity":1,"message":"174","line":286,"column":34,"nodeType":"171","messageId":"172","endLine":286,"endColumn":36},{"ruleId":"169","severity":1,"message":"174","line":331,"column":26,"nodeType":"171","messageId":"172","endLine":331,"endColumn":28},{"ruleId":"169","severity":1,"message":"174","line":339,"column":43,"nodeType":"171","messageId":"172","endLine":339,"endColumn":45},{"ruleId":"155","severity":1,"message":"180","line":1,"column":17,"nodeType":"157","messageId":"158","endLine":1,"endColumn":25},{"ruleId":"155","severity":1,"message":"180","line":1,"column":17,"nodeType":"157","messageId":"158","endLine":1,"endColumn":25},{"ruleId":"169","severity":1,"message":"174","line":13,"column":14,"nodeType":"171","messageId":"172","endLine":13,"endColumn":16},{"ruleId":"169","severity":1,"message":"174","line":15,"column":18,"nodeType":"171","messageId":"172","endLine":15,"endColumn":20},{"ruleId":"169","severity":1,"message":"174","line":17,"column":18,"nodeType":"171","messageId":"172","endLine":17,"endColumn":20},{"ruleId":"169","severity":1,"message":"174","line":19,"column":18,"nodeType":"171","messageId":"172","endLine":19,"endColumn":20},{"ruleId":"169","severity":1,"message":"174","line":21,"column":18,"nodeType":"171","messageId":"172","endLine":21,"endColumn":20},{"ruleId":"169","severity":1,"message":"174","line":23,"column":18,"nodeType":"171","messageId":"172","endLine":23,"endColumn":20},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'AuthContext' is defined but never used.","'useNavigate' is defined but never used.","'TopBar' is defined but never used.","'PersonalInfo' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Link' is defined but never used.","'data' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'clear' is assigned a value but never used.","Expected '===' and instead saw '=='.","'Button' is defined but never used.","'Paper' is defined but never used.","'id' is assigned a value but never used.","'setId' is assigned a value but never used.","'updateReservation' is assigned a value but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'TestSubscription' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'context' and 'title'. Either include them or remove the dependency array.","ArrayExpression",["209"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","React Hook useEffect has missing dependencies: 'times' and 'title'. Either include them or remove the dependency array.",["210"],"'loading' is assigned a value but never used.","'navigate' is assigned a value but never used.","'createReservation' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","React Hook useEffect has missing dependencies: 'ctx.date', 'ctx.title', and 'seatInfo'. Either include them or remove the dependency array.",["211"],"React Hook useEffect has a missing dependency: 'reservedSeat'. Either include it or remove the dependency array.",["212"],"React Hook useEffect has a missing dependency: 'seatInfo'. Either include it or remove the dependency array.",["213"],{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},"Update the dependencies array to be: [context, title]",{"range":"224","text":"225"},"Update the dependencies array to be: [date, times, title]",{"range":"226","text":"227"},"Update the dependencies array to be: [ctx.date, ctx.time, ctx.title, seatInfo]",{"range":"228","text":"229"},"Update the dependencies array to be: [reservedSeat, upload]",{"range":"230","text":"231"},"Update the dependencies array to be: [seatInfo]",{"range":"232","text":"233"},[703,705],"[context, title]",[1242,1248],"[date, times, title]",[4611,4621],"[ctx.date, ctx.time, ctx.title, seatInfo]",[5510,5518],"[reservedSeat, upload]",[7932,7934],"[seatInfo]"]