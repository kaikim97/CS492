[{"C:\\Users\\user\\projects\\CS492\\src\\index.js":"1","C:\\Users\\user\\projects\\CS492\\src\\reportWebVitals.js":"2","C:\\Users\\user\\projects\\CS492\\src\\App.js":"3","C:\\Users\\user\\projects\\CS492\\src\\time\\timeTable.js":"4"},{"size":517,"mtime":1636523386225,"results":"5","hashOfConfig":"6"},{"size":375,"mtime":1636523386226,"results":"7","hashOfConfig":"6"},{"size":661,"mtime":1636526956227,"results":"8","hashOfConfig":"6"},{"size":1812,"mtime":1636523648113,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"vukbn4",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"C:\\Users\\user\\projects\\CS492\\src\\index.js",[],["20","21"],"C:\\Users\\user\\projects\\CS492\\src\\reportWebVitals.js",[],"C:\\Users\\user\\projects\\CS492\\src\\App.js",["22"],"C:\\Users\\user\\projects\\CS492\\src\\time\\timeTable.js",["23","24","25"],"import React, { useState } from 'react';\r\nimport './time.css';\r\n\r\nconst times = [\r\n  { time : '10:00', seat : 30},\r\n  { time : '11:00', seat : 67},\r\n  { time : '12:00', seat : 44},\r\n  { time : '14:00', seat : 16},\r\n  { time : '16:00', seat : 24},\r\n  { time : '18:00', seat : 98},\r\n  { time : '20:00', seat : 29},\r\n  { time : '21:00', seat : 41}\r\n];\r\n\r\nconst TimeTable = ({ times = [] }) => (\r\n  <div className=\"time_tbl\">\r\n    <table className=\"kbo\">\r\n      <tbody>\r\n        {times.map(section => <TimeRow key={section.time} section={section} />)}\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n);\r\n\r\n\r\nconst TimeRow = ({ section }) => {\r\n  const [isShown, setIsShown] = useState(false);\r\n  const { time, seat } = section\r\n  const seatWithTotal = seat + \"/343\"\r\n  return (\r\n    <tr>\r\n      <td className = \"firstCol\" >\r\n        <span onMouseOver={mouseOverTime} onMouseOut={mouseOutTime}>{changeTimeForm(time)}\r\n        <span className=\"ampm\">{amOrPm(time)}</span></span>\r\n      </td>\r\n      <td ><span className = \"seat\">{isShown && seatWithTotal}</span></td>\r\n    </tr>\r\n  )\r\n  function mouseOverTime(e){\r\n    console.log(e.target.parentElement)\r\n    \r\n    if (e.target.parentElement.className = \"firstCol\"){\r\n      e.target.parentElement.style.background = '#ececec';\r\n      setIsShown(true)\r\n    }\r\n  }\r\n\r\n  function mouseOutTime(e){\r\n    if (e.target.parentElement.className = \"firstCol\"){\r\n      e.target.parentElement.style.background = \"white\";\r\n      setIsShown(false)\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction changeTimeForm( time ) {\r\n  if (time.slice(0, 2) * 1 > 12){\r\n    return time.slice(0, 2) * 1 - 12 + \":00\"\r\n  }else{\r\n    return time\r\n  }\r\n}\r\n\r\nfunction amOrPm( time ) {\r\n  if (time.slice(0, 2) * 1 >= 12){\r\n    return \"PM\"\r\n  }else{\r\n    return \"AM\"\r\n  }\r\n}\r\n\r\nexport default () => <TimeTable times={times} />\r\n",{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":2,"column":8,"nodeType":"32","messageId":"33","endLine":2,"endColumn":13},{"ruleId":"34","severity":1,"message":"35","line":42,"column":9,"nodeType":"36","messageId":"37","endLine":42,"endColumn":54},{"ruleId":"34","severity":1,"message":"35","line":49,"column":9,"nodeType":"36","messageId":"37","endLine":49,"endColumn":54},{"ruleId":"38","severity":1,"message":"39","line":73,"column":1,"nodeType":"40","endLine":73,"endColumn":49},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]